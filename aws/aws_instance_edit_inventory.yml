---
- name: Edit host inventory with public ip
  hosts: localhost
  #connection: local
  gather_facts: false
  # remote_user: ec2-user
  
  vars:
    aap_url: "{{ lookup('env', 'CONTROLLER_HOST') }}"
    aap_token: "{{ lookup('env', 'CONTROLLER_OAUTH_TOKEN') }}"
    # aap_inventory_id: "YOUR_AAP_INVENTORY_ID"

  tasks:
    - name: print aap_url & aap_token vars
      debug:
        msg: "aap_url: {{ aap_url }}, aap_token: {{ aap_token }}"

    - name: Display inventory hostname variables
      debug:
        msg: "{{ new_ec2_instance.instances[0].private_dns_name }}"
      # when: inventory_hostname == ec2.instances[0].private_dns_name

    - name: Query AAP inventory to obtain host ID
      ansible.builtin.uri:
        url: "{{ aap_url }}/api/controller/v2/hosts/?name={{ new_ec2_instance.instances[0].private_dns_name }}"
        method: GET
        headers:
          Content-Type: "application/json"
          Authorization: "Bearer {{ aap_token }}"
        status_code: 200 # Expect a "OK" status on success
        validate_certs: yes # Set to 'no' for self-signed certs
      register: aap_host_query
      # when: inventory_hostname == ec2.instances[0].private_dns_name

    - name: Print aap_host_query
      debug:
        msg: "{{ aap_host_query.json.results[0].id }}"

    - name: Query AAP inventory to obtain variable data
      ansible.builtin.uri:
        url: "{{ aap_url }}/api/controller/v2/hosts/{{ aap_host_query.json.results[0].id }}/variable_data/"
        method: GET
        headers:
          Content-Type: "application/json"
          Authorization: "Bearer {{ aap_token }}"
        status_code: 200 # Expect a "OK" status on success
        validate_certs: yes # Set to 'no' for self-signed certs
      register: aap_host_vars
      when: aap_host_query.json.results | length > 0

    - name: Print aap_host_vars
      debug:
        msg: "{{ aap_host_vars.json }}"

    - name: Query AAP inventory to edit variable data
      ansible.builtin.uri:
        url: "{{ aap_url }}/api/controller/v2/hosts/{{ aap_host_query.json.results[0].id }}/variable_data/"
        method: PATCH
        headers:
          Content-Type: "application/json"
          Authorization: "Bearer {{ aap_token }}"
        body:
          ansible_host: "{{ new_ec2_instance.instances[0].public_ip_address }}"
        body_format: json
        status_code: 200 # Expect a "OK" status on success
        validate_certs: yes # Set to 'no' for self-signed certs
      register: aap_host_vars
      when: aap_host_query.json.results | length > 0

    - name: Print aap_host_vars
      debug:
        msg: "{{ aap_host_vars.json }}"

    # - name: Edit AAP inventory with variable data
    #   ansible.builtin.uri:
    #     url: "{{ aap_url }}/api/controller/v2/hosts/{{ aap_host_query.json.results[0].id }}/variable_data/"
    #     method: PATCH
    #     headers:
    #       Content-Type: "application/json"
    #       Authorization: "Bearer {{ aap_token }}"
    #     status_code: 200 # Expect a "OK" status on success
    #     validate_certs: yes # Set to 'no' for self-signed certs
    #     body: "{{ aap_host_vars.json }}"
    #   when: aap_host_query.json.results | length > 0
