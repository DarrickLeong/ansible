---
# This playbook retrieves and reserves the next available IP address from a specified prefix in NetBox.
# It interacts directly with the NetBox API using the ansible.builtin.uri module.
# This method works around an issue where the netbox_ip_address module might require assigning the IP to a device.

- name: Get Next Available IP from NetBox IPAM via API
  hosts: localhost
  gather_facts: true
  connection: local

  # Define variables for connecting to NetBox.
  vars:
    netbox_url: "http://{{ netbox_endpoint }}:8000"  # Replace with your NetBox URL
    netbox_token: "{{ netbox_vault_token }}"  # Replace with your NetBox API token
    target_prefix: "192.168.1.0/24"           # <-- IMPORTANT: Replace with the prefix you want an IP from

  tasks:
    - name: "Find the ID of the prefix '{{ target_prefix }}'"
      ansible.builtin.uri:
        url: "{{ netbox_url }}/api/ipam/prefixes/?prefix={{ target_prefix | urlencode }}"
        method: GET
        headers:
          Authorization: "Token {{ netbox_token }}"
          Content-Type: "application/json"
        validate_certs: false
        status_code: 200
      register: prefix_search_result

    - name: print prefix_search_result
      ansible.builtin.debug:
        var: prefix_search_result

    - name: "Fail if prefix is not found or is not unique"
      ansible.builtin.fail:
        msg: "Prefix '{{ target_prefix }}' not found or more than one prefix matched."
      when: prefix_search_result.json.count != 1

    - name: print prefix_search_result.json.results
      ansible.builtin.debug:
        var: prefix_search_result.json.results[0].id

    - name: "Set prefix_id fact"
      ansible.builtin.set_fact:
        prefix_id: "{{ prefix_search_result.json.results[0].id }}"

    - name: "Request the next available IP from prefix ID {{ prefix_id }}"
      # A POST request to this endpoint creates and returns the next available IP.
      ansible.builtin.uri:
        url: "{{ netbox_url }}/api/ipam/prefixes/{{ prefix_id }}/available-ips/"
        method: POST
        headers:
          Authorization: "Token {{ netbox_token }}"
          Content-Type: "application/json"
        body_format: json
        body:
          description: "IP allocated by Ansible on {{ ansible_date_time.iso8601 }}"
          tags:
            - name: "ansible-allocated"
        validate_certs: false
        status_code: 201  # A successful creation returns HTTP 201
      register: new_ip_details

    - name: "Display the newly allocated IP address"
      ansible.builtin.debug:
        msg: "Successfully allocated IP: {{ new_ip_details.json.address }}"
      when: new_ip_details.json.address is defined

    - name: set stats for new IP details
      ansible.builtin.set_stats:
        data:
          new_ip_address: "{{ new_ip_details.json.address }}"