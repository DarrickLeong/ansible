---
- name: Setup NFS mounts on Hub servers before AAP installation
  hosts: automationhub
  become: true
  vars:
    nfs_server: "192.168.8.156"
    nfs_share_base: "/nfs/exports/myshare"
    pulp_mount_point: "/var/lib/pulp"
    pulp_static_mount_point: "/var/lib/pulp/pulpcore_static"

  tasks:
    - name: Install NFS client utilities
      dnf:
        name: nfs-utils
        state: present

    - name: Create main mount point for pulp
      file:
        path: "{{ pulp_mount_point }}"
        state: directory
        mode: '0755'

    - name: Add NFS mount entry for /var/lib/pulp in fstab
      lineinfile:
        path: /etc/fstab
        line: "{{ nfs_server }}:{{ nfs_share_base }} {{ pulp_mount_point }} nfs defaults,_netdev,nosharecache,context=\"system_u:object_r:var_lib_t:s0\" 0 0"
        backup: true
        state: present
      notify:
        - reload systemd daemon

    - name: Add NFS mount entry for /var/lib/pulp/pulpcore_static in fstab
      lineinfile:
        path: /etc/fstab
        line: "{{ nfs_server }}:{{ nfs_share_base }}/pulpcore_static {{ pulp_static_mount_point }} nfs defaults,_netdev,nosharecache,context=\"system_u:object_r:httpd_sys_content_rw_t:s0\" 0 0"
        backup: true
        state: present
      notify:
        - reload systemd daemon

    - name: Reload systemd manager configuration
      systemd:
        daemon_reload: true

    - name: Mount /var/lib/pulp (using fstab entry)
      command: mount {{ pulp_mount_point }}
      register: mount_pulp_result
      changed_when: mount_pulp_result.rc == 0
      failed_when: mount_pulp_result.rc != 0

    - name: Create mount point for pulpcore_static
      file:
        path: "{{ pulp_static_mount_point }}"
        state: directory
        mode: '0755'

    - name: Mount all filesystems from fstab (mount -a)
      command: mount -a
      register: mount_all_result
      changed_when: false
      failed_when: mount_all_result.rc != 0

    - name: Get current mount information
      command: mount
      register: current_mounts
      changed_when: false

    - name: Verify /var/lib/pulp mount is active
      assert:
        that:
          - "pulp_mount_point in current_mounts.stdout"
          - "nfs_server + ':' + nfs_share_base in current_mounts.stdout"
        fail_msg: "{{ pulp_mount_point }} is not properly mounted from NFS server"
        success_msg: "{{ pulp_mount_point }} is successfully mounted from {{ nfs_server }}:{{ nfs_share_base }}"

    - name: Verify /var/lib/pulp/pulpcore_static mount is active
      assert:
        that:
          - "pulp_static_mount_point in current_mounts.stdout"
          - "nfs_server + ':' + nfs_share_base + '/pulpcore_static' in current_mounts.stdout"
        fail_msg: "{{ pulp_static_mount_point }} is not properly mounted from NFS server"
        success_msg: "{{ pulp_static_mount_point }} is successfully mounted from {{ nfs_server }}:{{ nfs_share_base }}/pulpcore_static"

    - name: Display all current NFS mounts
      debug:
        msg: "Current NFS mounts: {{ current_mounts.stdout_lines | select('match', '.*nfs.*') | list }}"

    - name: Test NFS write access
      file:
        path: "{{ pulp_mount_point }}/test_write_access"
        state: touch
        mode: '0644'
      register: write_test

    - name: Remove test file
      file:
        path: "{{ pulp_mount_point }}/test_write_access"
        state: absent
      when: write_test is succeeded

    - name: Display NFS mount setup completion
      debug:
        msg:
          - "NFS mounts configured successfully for {{ inventory_hostname }}"
          - "Primary mount: {{ nfs_server }}:{{ nfs_share_base }} -> {{ pulp_mount_point }}"
          - "Static mount: {{ nfs_server }}:{{ nfs_share_base }}/pulpcore_static -> {{ pulp_static_mount_point }}"
          - "Write access test: {{ 'PASSED' if write_test is succeeded else 'FAILED' }}"

  handlers:
    - name: reload systemd daemon
      systemd:
        daemon_reload: true